name: Frontend Deploy

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  deploy-frontend:
    name: Deploy Frontend
    runs-on: ubuntu-latest
    steps:
   
    - uses: actions/checkout@v2
      
    - name: eko
      run: cat ./FrontendServerKeyPair.pem
      
    - name: cmod
      run: chmod 777 ./FrontendServerKeyPair.pem
      
    - name: Clear the machine
      uses: appleboy/ssh-action@master
      with:
        host: ec2-3-17-180-100.us-east-2.compute.amazonaws.com
        username: ec2-user
        key_path: ./FrontendServerKeyPair.pem
        script_stop: true
        script: | 
          sudo rm -rf ~/app || true
          sudo docker container stop $(sudo docker container ls -aq) || true
          docker system prune –af ––volumes || true
          mkdir ~/app
    
    - name: Build the Docker Image
      run: docker build -t webimage web
    
    - name: Save the Docker Image
      run: docker save webimage | gzip > webimage.tar.gz
   
#     - name: Clear the machine
#       uses: appleboy/ssh-action@master
#       with:
#         host: ec2-3-17-180-100.us-east-2.compute.amazonaws.com
#         username: ubuntu
#         key: $FRONTEND_PRIVATE_KEY
#         script_stop: true
#         script: | 
#           sudo rm -rf ~/app || true
#           sudo docker container stop $(sudo docker container ls -aq) || true
#           docker system prune –af ––volumes || true
#           mkdir ~/app
#       env:
#         FRONTEND_PRIVATE_KEY: ${{ secrets.FRONTEND_PRIVATE_KEY }}  
    
    - name: Push Docker Image to AWS
      uses: appleboy/scp-action@master
      with:
        host: ec2-3-17-180-100.us-east-2.compute.amazonaws.com
        key: $FRONTEND_PRIVATE_KEY
        username: ubuntu
        source: webimage.tar.gz
        target: ~/app/
    
    - name: Run Docker Container
      uses: appleboy/ssh-action@master
      with:
        host: ec2-3-17-180-100.us-east-2.compute.amazonaws.com
        username: ubuntu
        key: $FRONTEND_PRIVATE_KEY
        script_stop: true
        script: | 
          cd ~/app
          sudo docker load -i webimage.tar.gz
          sudo docker run -p 80:80 
